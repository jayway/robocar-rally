AWSTemplateFormatVersion: '2010-09-09'
Description: IoT solution

# See https://aws.amazon.com/blogs/ai/building-an-autonomous-vehicle-part-3-connecting-your-autonomous-vehicle/

Resources:

  DynamoDBRule:
    Type: AWS::IoT::TopicRule
    Properties:
      TopicRulePayload:
        Sql: SELECT * FROM '/topics/AutonomousVehicles/#'
        RuleDisabled: 'false'
        Actions:
          - DynamoDBv2:
              PutItem:
                TableName: !Ref VehicleTable
              RoleArn: !GetAtt DynamoDBInvokationRole.Arn

  DynamoDBInvokationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - iot.amazonaws.com
      Policies:
        - PolicyName: ddb-put
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: dynamoDB:PutItem
                Resource: !GetAtt VehicleTable.Arn

  VehicleTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        -
          AttributeName: vehicleID
          AttributeType: S
        -
          AttributeName: time
          AttributeType: S
      KeySchema:
        -
          AttributeName: vehicleID
          KeyType: HASH
        -
          AttributeName: time
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TimeToLiveSpecification:
        AttributeName: dynamodb_ttl
        Enabled: 'true'

  FirehoseRule:
    Type: AWS::IoT::TopicRule
    Properties:
      TopicRulePayload:
        Sql: SELECT * FROM '/topics/AutonomousVehicles/#'
        RuleDisabled: 'false'
        Actions:
          - Firehose:
              DeliveryStreamName: String
              RoleArn: !GetAtt FirehoseInvokationRole.Arn

  FirehoseInvokationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - iot.amazonaws.com
      Policies:
        - PolicyName: firehose-put
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - firehose:PutRecord
                Resource: !GetAtt Firehose.Arn

  Firehose:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamType: DirectPut
      S3DestinationConfiguration:
        BucketARN: !GetAtt LogDataBucket.Arn
        BufferingHints:
          IntervalInSeconds: 300
          SizeInMBs: 5
        CompressionFormat: GZIP
        Prefix: 'autonomousvehicles/telemetry/'
        RoleARN: !GetAtt S3InvokationRole.Arn

  S3InvokationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - firehose.amazonaws.com
      Policies:
        - PolicyName: s3-put
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:AbortMultipartUpload
                  - s3:GetBucketLocation
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:ListBucketMultipartUploads
                  - s3:PutObject
                Resource:
                  - !Sub '${LogDataBucket.Arn}/*'

  LogDataBucket:
    Type: AWS::S3::Bucket


Outputs:

  VehicleTableName:
    Value: !Ref VehicleTable

  LogDataBucketUrl:
    Value: !Sub 's3://${LogDataBucket}'